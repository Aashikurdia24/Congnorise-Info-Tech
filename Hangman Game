import random
from tkinter import *
from tkinter import messagebox 

#list of word used the game
list_word=['python','hangman ','coding ','program']

#intialize the word
words_to_guess=random.choice(list_word)
guessed_letter=[]
attempts=0

#creating a window
root=Tk()
root.geometry('400x600')
root.resizable(0,0)
root.title('Hangman Game ')
root.config(bg="#404040")


#function part
#fuction to dispaly win or lose 
def is_game_over():
    return check_win() or check_lose()

#fuction for check weather guess letter is equala to letter stored 
def check_win():
    return all(letter in guessed_letter for letter in words_to_guess)

#fuction for weather attempts are over
def check_lose():
    return attempts==0

#fuction for letter to guess 
def guess_letter():
    global attempts
    letter=letter_entry.get().lower()
    if letter.isalpha() and len(letter) == 1:
        if letter in guessed_letter:
            messagebox.showinfo("Hangman",f"You've already guessed '{letter}'")
        elif letter in words_to_guess:
            guessed_letter.append(letter)
            update_word_dispaly()
            if check_win():
                messagebox.showinfo("Hangman ","Congratulation ! you won .")
                reset_game()
        else:
            guessed_letter.append(letter)
            attempts -= 1
            update_attempts_dispaly()
            draw_hangman()
            if check_lose():
                messagebox.showinfo("Hangman"," You lose ! the word was  :"+ word_to_guess)
                reset_game()
        letter_entry.delete(0,END)
    else:
        messagebox.showinfo("Hangman","Please enter a single letter")

        
# function to reset the game
def reset_game():
    global word_to_guess , guessed_letter ,attempts
    word_to_guess = random.choice(list_word)
    guessed_letter = []
    attempts = 7
    update_word_dispaly()
    update_attempts_dispaly()
    draw_hangman()

#function to update the word display
def update_word_dispaly():
    display_word=""     
    for letter in word_to_guess:
        if letter in guessed_letter:
            display_word += letter
        else:
            display_word += "_"
        display_word += "_"
    word_label.config(text=display_word)

#fuction to update the attempts dispaly
def update_attempts_dispaly():
    attempts_label.config(text=f"Attempts letf : {attempts}")

#fuction to draw the humgman figure
def draw_hangman():
    if attempts == 0:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h7.png")
        
    elif attempts == 1:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h6.png")
        
    elif attempts == 2:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h5.png")
        
    elif attempts == 3:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h4.png")
        
    elif attempts == 4:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h3.png")
        
    elif attempts == 5:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h2.png")
        
    else:
        my_img.configure(file="C:\\Users\\Admin\\Desktop\\python_project\\h1.png")
       


#creating the window

my_img=PhotoImage(file="C:\\Users\\Admin\\Desktop\\python_project\\h1.png")
hangman_img=Label(image=my_img, bg="#404040")
hangman_img.place(x=70,y=-55)
hangman_img.bind('<Button-1>',draw_hangman)

word_label=Label(root,text="",font=("arila",24),fg="#1ab5ef",bg="#404040")
word_label.place(x=70,y=385)

attempts_label=Label(root,text="",font=("arila",16),fg="#1ab5ef",bg="#404040")
attempts_label.place(x=122,y=435)

letter_entry=Entry(root,width=12,font=("arila",23))
letter_entry.place(x=95,y=485)

guess_btn=Button(root,text="Guess",width=13,height=2,command=guess_letter,bg="#1ab5ef")
guess_btn.place(x=250,y=540)

reset_btn=Button(root,width=13,height=2,text="Reset",command=reset_game,bg="#1ab5ef")
reset_btn.place(x=40,y=540)


#Here are shades of orange along with their HEX codes:

#background color : #404040
#fontground color : #1ab5ef

root.mainloop()
